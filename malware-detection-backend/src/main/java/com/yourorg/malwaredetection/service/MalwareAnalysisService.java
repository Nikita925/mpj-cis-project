package com.yourorg.malwaredetection.service;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import com.yourorg.malwaredetection.model.ScanResult;
import com.yourorg.malwaredetection.websocket.AlertSender;

@Service
public class MalwareAnalysisService {

    @Autowired
    private AlertSender alertSender;

    public ScanResult analyzeFile(MultipartFile file) {
        String result = "unknown";
        String errorMessage = null;

        try {
            // Save the uploaded file temporarily
            File tempFile = File.createTempFile("upload_", "_" + file.getOriginalFilename());
            file.transferTo(tempFile);

            // Execute Python script
            ProcessBuilder pb = new ProcessBuilder("python", "ml/predict.py", tempFile.getAbsolutePath());
            pb.redirectErrorStream(true);
            Process process = pb.start();

            // Read output from Python script
            BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
            String line;
            StringBuilder output = new StringBuilder();
            while ((line = reader.readLine()) != null) {
                output.append(line).append("\n");
            }

            result = output.toString().trim();

            // Wait for process to finish
            process.waitFor();
            tempFile.delete(); // Clean up temp file

        } catch (IOException | InterruptedException e) {
            e.printStackTrace();
            errorMessage = e.getMessage();
            result = "Error: " + errorMessage; // Return the error message
        }

        // Create scan result object
        ScanResult scan = new ScanResult();
        scan.setFileName(file.getOriginalFilename());
        scan.setResult(result);
        scan.setScannedAt(System.currentTimeMillis());

        // Send alert if malware detected
        if ("malware".equalsIgnoreCase(result)) {
            alertSender.sendAlert("⚠️ Malware detected in: " + file.getOriginalFilename());
        }

        return scan;
    }
}
